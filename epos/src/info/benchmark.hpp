#pragma once
#include "info.hpp"

void info(deus::device& device) {
  deus::memory memory;
  const auto beg = std::chrono::high_resolution_clock::now();
  if (const auto ec = device.info(g_pid, memory)) {
    fmt::print("info error: 0x{:08X} {}\n", static_cast<unsigned>(ec.value()), ec.message());
    return;
  }
  if (const auto ec = device.copy(g_pid, memory)) {
    fmt::print("copy error: 0x{:08X} {}\n", static_cast<unsigned>(ec.value()), ec.message());
    return;
  }
  const auto res = deus::scan(memory, "00 00 00 00 ?? ?? 00 00 ?? 00 00 00 ?? 00 00 00 00 00 FF FF 00 01 00 00 02");
  const auto end = std::chrono::high_resolution_clock::now();
  const auto dur = std::chrono::duration_cast<std::chrono::milliseconds>(end - beg);
  fmt::print("{} entities in {} pages ({} ms)\n", res.size(), memory.size(), dur.count());
  for (const auto address : res) {
    for (const auto& e : memory) {
      if (address >= e.base_address && address < e.base_address + e.region_size) {
        fmt::print("0x{:016X} 0x{:016X} {} 0x{:X} 0x{:X} 0x{:X}\n",
          e.base_address, address, e.region_size, e.state, e.protect, e.type);
        break;
      }
    }
  }

  // 0x000001F612F70000 0x000001F612FAB19C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FAB31C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FAB49C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FAB61C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FAB79C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FAB91C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FABA9C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FABC1C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FABD9C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FABF1C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FAC09C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FAC21C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FAC5DC 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FAC75C 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FAC8DC 1572864 0x1000 0x4 0x20000
  // 0x000001F612F70000 0x000001F612FACF9C 1572864 0x1000 0x4 0x20000

  // 0x000001F642430000 0x000001F64246B19C 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246B31C 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246B49C 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246B61C 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246B79C 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246B91C 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246BA9C 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246BC1C 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246BD9C 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246BFDC 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246C15C 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246C2DC 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246C5DC 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246C75C 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246C99C 1572864 0x1000 0x4 0x20000
  // 0x000001F642430000 0x000001F64246CF9C 1572864 0x1000 0x4 0x20000
}
